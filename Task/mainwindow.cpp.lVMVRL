#include "mainwindow.h"
#include "ui_mainwindow.h"
#include <QGraphicsTextItem>
#include<QFont>
#include<QGraphicsItem>
#include <QGraphicsItemAnimation>
#include <QDebug>
#include <QTimeLine>
#include <QStack>
MainWindow::MainWindow(QWidget *parent): QMainWindow(parent), ui(new Ui::MainWindow)
{
    ui->setupUi(this);
    scene =new QGraphicsScene();
    //disk=new Disk(20,-10);
    ui->graphicsView->setScene(scene);

    //scene->addItem(disk);
    //disk->setPos(0,0);
    //setAnimation();

    //scene->addLine(0,250,0,-250);

    //scene->addRect(207,0,1,30);
    //scene->addRect(407,0,1,30);

    //scene->addRect(0,0,15,10,QPen(Qt::black),QBrush(Qt::red));

    //scene->addRect(200,30,15,10,QPen(Qt::black),QBrush(Qt::red));
    //scene->addRect(400,30,15,10,QPen(Qt::black),QBrush(Qt::red));

    //scene->addRect(-10,60,50,15); //как пример пирамиды.
    //scene->addRect(-25,90,80,15);
    //scene->addRect(-40,120,110,15);

    // номера под столбиками
    int x=0;
    for (int var = 1; var < 4; ++var) {
        QGraphicsTextItem *text=new QGraphicsTextItem();
        text = scene->addText(QString::number(var));
        text->setPos(x,30);
        x=x+200;

    }
}

MainWindow::~MainWindow()
{
    delete ui;
}

void MainWindow::AnimationRight()
{
  qDebug()<<"hi";
}
//анимация прямоугольника
void MainWindow::setAnimation(QStack<QGraphicsItem*> &one)
{

    QTimeLine *timer = new QTimeLine(3000);
    timer->setFrameRange(0, 100);

    QGraphicsItemAnimation *animation = new QGraphicsItemAnimation;
    if(!one.isEmpty()){
    animation->setItem(one.top());

    }

    animation->setTimeLine(timer);

    animation->setPosAt( 0.1, QPointF(0, one.top()->pos().toPoint().y()-40));

      //animation->setPosAt( 0.1, QPointF(30, 0));



   // connect(timer,SIGNAL(finished()),this,SLOT(AnimatedRight()));
        timer->start();




}


void MainWindow::Move(QStack<QGraphicsItem*> &one,QStack<QGraphicsItem*> &two)
{

    num ++; // Счетчик

    if(!one.isEmpty()){
    two.push(one.top());
    setAnimation(one);

    one.pop();

    }


}
void MainWindow::Hanoi(int n,QStack<QGraphicsItem*>& one,QStack<QGraphicsItem*> &two, QStack<QGraphicsItem*> &tree)
{
    if(n==1)
    {
        Move(one,tree);

    }
    else
    {

         Hanoi (n-1, one, tree, two); // Сначала переместите первые n-1 дисков из начального столбца A во вспомогательный столбец B
         Move (one, tree); // Перемещаем n-й диск из начального бара A в целевой бар C
         Hanoi (n-1, two, one, tree); // Наконец, переместите диски n-1 из вспомогательного столбца B в целевой столбец C
    }
}
//взаимодйствие между вводимым текстом и отображаемым текстом
void MainWindow::on_lineEdit_editingFinished()
{

}

// функция удаления прямоугольников(дисков)
void MainWindow::DeleteMyItem(){

        while(!one.isEmpty()){
        scene->removeItem(one.pop());
        }
}



//функция создания прямоугольников(дисков)
void MainWindow::on_lineEdit_returnPressed()
{
    DeleteMyItem();
    int x=0,y=0,w=30,l=30;
    QString text=ui->lineEdit->text();
    MainWindow::a= text.toInt();
    if(a<=20&&a>0){
        ui->label_2->setText(text);
        for (int var = 0; var < a; ++var) {
            //scene->addRect(x,y,l,w,QPen(Qt::black),QBrush(QColor(qrand()%255,qrand()%255,qrand()%255)));
            disk=new Disk(l,-w,x,y);
            scene->addItem(disk);

            disk->setPos(x,y);


           one.push(disk);

            //x-=5;
            y-=25;
            //l+=10;
        }
        qDebug()<<one.last();


    }else{


         ui->label_2->setText("Error");
 }
}

//
void MainWindow::on_lineEdit_textChanged(const QString &)
{

}

void MainWindow::on_pushButton_clicked()
{

    Hanoi(a,one,two,three);
    qDebug()<<num;
    num=0;
}
